name: windows-x64-gpu

on: [push, workflow_dispatch]

jobs:
  windows-gpu:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        ref: master

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: vulkansdk
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.3.275.0/windows/VulkanSDK-1.3.275.0-Installer.exe?Human=true -OutFile VulkanSDK.exe
        $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList "--accept-licenses --default-answer --confirm-command install";
        $installer.WaitForExit();

    - name: cache-swiftshader
      id: cache-swiftshader
      uses: actions/cache@v3
      with:
        path: swiftshader-install
        key: swiftshader-vs2022-x64-install-20220211
    - name: checkout-swiftshader
      if: steps.cache-swiftshader.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: google/swiftshader
        path: swiftshader
        ref: 0863290dc7f6cc1649bab1858790e812b8aef02a
    - name: checkout-swiftshader-submodules
      if: steps.cache-swiftshader.outputs.cache-hit != 'true'
      run: |
        cd swiftshader
        git -c submodule."third_party/git-hooks".update=none submodule update --init --recursive
    - name: swiftshader
      if: steps.cache-swiftshader.outputs.cache-hit != 'true'
      run: |
        cd swiftshader
        mkdir build2; cd build2
        cmake -T host=x64 -A x64 -DCMAKE_INSTALL_PREFIX=install -DSWIFTSHADER_BUILD_EGL=FALSE -DSWIFTSHADER_BUILD_GLESv2=FALSE -DSWIFTSHADER_BUILD_GLES_CM=FALSE -DSWIFTSHADER_BUILD_VULKAN=TRUE -DSWIFTSHADER_BUILD_PVR=FALSE -DSWIFTSHADER_BUILD_TESTS=FALSE -DSWIFTSHADER_ENABLE_ASTC=FALSE -DSWIFTSHADER_WARNINGS_AS_ERRORS=FALSE -DREACTOR_BACKEND=Subzero -DREACTOR_DEFAULT_OPT_LEVEL=Default -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release -j 2
        mkdir "$env:GITHUB_WORKSPACE/swiftshader-install"
        Copy-Item -Path "Windows\*" -Destination "$env:GITHUB_WORKSPACE\swiftshader-install"

    - name: Upload swiftshader
      uses: actions/upload-artifact@v2
      with:
        name: swiftshader-windows
        path: swiftshader-install

    - name: build
      run: |
        $env:VULKAN_SDK="C:/VulkanSDK/1.3.275.0"
        $env:Path+=";C:/VulkanSDK/1.3.275.0/Bin"
        cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded -DNCNN_VULKAN=ON -DNCNN_BUILD_BENCHMARK=FALSE -DNCNN_BUILD_EXAMPLES=FALSE -DNCNN_BUILD_TESTS=OFF -DNCNN_BUILD_TOOLS=OFF -DNCNN_OPENMP=FALSE -DNCNN_ENABLE_LTO=TRUE
        cmake --build build --verbose
        cmake --install build --prefix ncnn

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ncnn-gpu-x64-windows
        path: ncnn

    - name: Package
      shell: pwsh
      run: |
        mkdir ncnn\tests
        echo "[Processor]`nThreadCount=1`n" > ncnn/tests/SwiftShader.ini
        Copy-Item -Path "$env:GITHUB_WORKSPACE\swiftshader-install\vulkan-1.dll" -Destination "ncnn\tests"
        Compress-Archive ncnn -DestinationPath ncnn-gpu-x64-windows.zip

    - name: Get description
      shell: bash
      run: |
        echo NCNN_VERSION=g`git describe --always` >> $GITHUB_ENV
        echo TIME=`date -u +"%y%m%d-%H%M"` >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ncnn-gpu-x64-windows.zip
        name: Build ${{ env.NCNN_VERSION }}
        tag_name: ${{ env.TIME }}-${{ env.NCNN_VERSION }}
        prerelease: true

