name: windows-x64-gpu

on: [push, workflow_dispatch]

jobs:
  windows-gpu:
    runs-on: windows-2022

    steps:
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: cache-protobuf
      id: cache-protobuf
      uses: actions/cache@v3
      with:
        path: "protobuf-install"
        key: protobuf-x64-install

    - name: protobuf
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://github.com/protocolbuffers/protobuf/archive/v3.11.2.zip -OutFile protobuf-3.11.2.zip
        7z x ./protobuf-3.11.2.zip
        cd protobuf-3.11.2
        cmake -S cmake -B build_rel -G Ninja -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=ON -DCMAKE_BUILD_TYPE=Release -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl
        cmake --build build_rel --verbose
        cmake --install build_rel --prefix "$env:GITHUB_WORKSPACE\protobuf-install"

    - name: vulkansdk
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.2.189.0/windows/VulkanSDK-1.2.189.0-Installer.exe?Human=true -OutFile VulkanSDK.exe
        $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("/S");
        $installer.WaitForExit();

    - uses: actions/checkout@v3
      with:
        submodules: true
        ref: master

    - name: build
      run: |
        $env:VULKAN_SDK="C:/VulkanSDK/1.2.189.0"
        $env:Path+=";C:/VulkanSDK/1.2.189.0/Bin"
        cmake -S . -B build -G Ninja -DProtobuf_INCLUDE_DIR="$env:GITHUB_WORKSPACE\protobuf-install\include" -DProtobuf_LIBRARIES="$env:GITHUB_WORKSPACE\protobuf-install\lib\libprotobuf.lib" -DProtobuf_PROTOC_EXECUTABLE="$env:GITHUB_WORKSPACE\protobuf-install\bin\protoc.exe" -DNCNN_VULKAN=ON -DNCNN_BUILD_BENCHMARK=FALSE  -DNCNN_BUILD_EXAMPLES=FALSE -DNCNN_BUILD_TESTS=OFF -DNCNN_BUILD_TOOLS=OFF -DNCNN_OPENMP=FALSE -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded -DNCNN_ENABLE_LTO=TRUE
        cmake --build build --verbose
        cmake --install build --prefix ncnn

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ncnn-gpu-x64-windows
        path: ncnn

    - name: Package
      shell: pwsh
      run: Compress-Archive ncnn -DestinationPath ncnn-gpu-x64-windows.zip

    - name: Get description
      shell: bash
      run: |
        echo NCNN_VERSION=g`git describe --always` >> $GITHUB_ENV
        echo TIME=`date -u +"%y%m%d-%H%M"` >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ncnn-gpu-x64-windows.zip
        name: Build ${{ env.NCNN_VERSION }}
        tag_name: ${{ env.TIME }}-${{ env.NCNN_VERSION }}
        prerelease: true

